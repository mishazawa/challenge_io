services:
  api: &django
    env_file: .env.prod
    build:
      context: .
      dockerfile: ./docker/Dockerfile.api
    command: uvicorn challenge_io.asgi:application --proxy-headers --host 0.0.0.0 --port 5000
    container_name: api
    environment:
      DEBUG:
    volumes: # static files for caddy
      - django-static:/var/www
    depends_on:
      migration:
        condition: service_completed_successfully
      collectstatic:
        condition: service_completed_successfully
    restart: on-failure:3
    networks:
      proxy_frontend:

  migration: &migration
    <<: *django
    container_name: django_bootstrap_migration
    command: python manage.py migrate --noinput
    depends_on: []
    ports: []
    restart: "no"

  collectstatic:
    <<: *migration
    container_name: django_bootstrap_collectstatic
    command: python manage.py collectstatic --noinput
    restart: "no"

  caddy:
    image: caddy:latest
    container_name: proxy_frontend
    ports:
      - 443:443
      - 80:80
    env_file: ".env.prod"
    volumes:
      - ./Caddyfile.prod:/etc/caddy/Caddyfile:ro
      - django-static:/www/html:ro
    networks:
      proxy_frontend:
    depends_on:
      api:
        condition: service_started
      web:
        condition: service_started
    restart: unless-stopped

  web:
    env_file: .env.prod
    build:
      context: .
      dockerfile: ./docker/Dockerfile.web
    container_name: web
    command: node server.js
    restart: on-failure:3
    networks:
      proxy_frontend:

networks:
  proxy_frontend:
volumes:
  django-static:

secrets:
  django_secret_prod:
    external: true
